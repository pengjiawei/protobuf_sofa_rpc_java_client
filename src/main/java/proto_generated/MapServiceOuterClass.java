package proto_generated;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map_service.proto

public final class MapServiceOuterClass {
  private MapServiceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MapCellOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MapCell)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required uint32 x = 1;</code>
     */
    int getX();

    /**
     * <code>required uint32 y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required uint32 y = 2;</code>
     */
    int getY();

    /**
     * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
     */
    boolean hasValue();
    /**
     * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
     */
    MapCell.Value getValue();
  }
  /**
   * Protobuf type {@code MapCell}
   */
  public  static final class MapCell extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MapCell)
      MapCellOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapCell.newBuilder() to construct.
    private MapCell(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapCell() {
      x_ = 0;
      y_ = 0;
      value_ = 2;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapCell(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              Value value = Value.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                value_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MapServiceOuterClass.internal_static_MapCell_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MapServiceOuterClass.internal_static_MapCell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MapCell.class, Builder.class);
    }

    /**
     * Protobuf enum {@code MapCell.Value}
     */
    public enum Value
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FREE = 0;</code>
       */
      FREE(0),
      /**
       * <code>OBSTACLE = 1;</code>
       */
      OBSTACLE(1),
      /**
       * <code>UNKNOWN = 2;</code>
       */
      UNKNOWN(2),
      ;

      /**
       * <code>FREE = 0;</code>
       */
      public static final int FREE_VALUE = 0;
      /**
       * <code>OBSTACLE = 1;</code>
       */
      public static final int OBSTACLE_VALUE = 1;
      /**
       * <code>UNKNOWN = 2;</code>
       */
      public static final int UNKNOWN_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Value valueOf(int value) {
        return forNumber(value);
      }

      public static Value forNumber(int value) {
        switch (value) {
          case 0: return FREE;
          case 1: return OBSTACLE;
          case 2: return UNKNOWN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Value>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Value> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Value>() {
              public Value findValueByNumber(int number) {
                return Value.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MapCell.getDescriptor().getEnumTypes().get(0);
      }

      private static final Value[] VALUES = values();

      public static Value valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Value(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MapCell.Value)
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>required uint32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>required uint32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private int value_;
    /**
     * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
     */
    public Value getValue() {
      @SuppressWarnings("deprecation")
      Value result = Value.valueOf(value_);
      return result == null ? Value.UNKNOWN : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MapCell)) {
        return super.equals(obj);
      }
      MapCell other = (MapCell) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (getX()
            == other.getX());
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (getY()
            == other.getY());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && value_ == other.value_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + value_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MapCell parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MapCell parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MapCell parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MapCell parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MapCell parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MapCell parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MapCell parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MapCell parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MapCell parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MapCell parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MapCell parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MapCell parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MapCell prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapCell}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MapCell)
        MapCellOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MapServiceOuterClass.internal_static_MapCell_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MapServiceOuterClass.internal_static_MapCell_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MapCell.class, Builder.class);
      }

      // Construct using MapServiceOuterClass.MapCell.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 2;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MapServiceOuterClass.internal_static_MapCell_descriptor;
      }

      public MapCell getDefaultInstanceForType() {
        return MapCell.getDefaultInstance();
      }

      public MapCell build() {
        MapCell result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MapCell buildPartial() {
        MapCell result = new MapCell(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MapCell) {
          return mergeFrom((MapCell)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MapCell other) {
        if (other == MapCell.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          return false;
        }
        if (!hasY()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MapCell parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MapCell) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int x_ ;
      /**
       * <code>required uint32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>required uint32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>required uint32 y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>required uint32 y = 2;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }

      private int value_ = 2;
      /**
       * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
       */
      public Value getValue() {
        @SuppressWarnings("deprecation")
        Value result = Value.valueOf(value_);
        return result == null ? Value.UNKNOWN : result;
      }
      /**
       * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
       */
      public Builder setValue(Value value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        value_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .MapCell.Value value = 3 [default = UNKNOWN];</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 2;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MapCell)
    }

    // @@protoc_insertion_point(class_scope:MapCell)
    private static final MapCell DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MapCell();
    }

    public static MapCell getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<MapCell>
        PARSER = new com.google.protobuf.AbstractParser<MapCell>() {
      public MapCell parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapCell(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapCell> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MapCell> getParserForType() {
      return PARSER;
    }

    public MapCell getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Map)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 width = 1;</code>
     */
    boolean hasWidth();
    /**
     * <code>required uint32 width = 1;</code>
     */
    int getWidth();

    /**
     * <code>required uint32 height = 2;</code>
     */
    boolean hasHeight();
    /**
     * <code>required uint32 height = 2;</code>
     */
    int getHeight();

    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    java.util.List<MapCell>
        getMapCellList();
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    MapCell getMapCell(int index);
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    int getMapCellCount();
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    java.util.List<? extends MapCellOrBuilder>
        getMapCellOrBuilderList();
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    MapCellOrBuilder getMapCellOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code Map}
   */
  public  static final class Map extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Map)
      MapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Map.newBuilder() to construct.
    private Map(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Map() {
      width_ = 0;
      height_ = 0;
      mapCell_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Map(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              width_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              height_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                mapCell_ = new java.util.ArrayList<MapCell>();
                mutable_bitField0_ |= 0x00000004;
              }
              mapCell_.add(
                  input.readMessage(MapCell.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          mapCell_ = java.util.Collections.unmodifiableList(mapCell_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MapServiceOuterClass.internal_static_Map_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MapServiceOuterClass.internal_static_Map_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Map.class, Builder.class);
    }

    private int bitField0_;
    public static final int WIDTH_FIELD_NUMBER = 1;
    private int width_;
    /**
     * <code>required uint32 width = 1;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 width = 1;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private int height_;
    /**
     * <code>required uint32 height = 2;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 height = 2;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int MAPCELL_FIELD_NUMBER = 3;
    private java.util.List<MapCell> mapCell_;
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    public java.util.List<MapCell> getMapCellList() {
      return mapCell_;
    }
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    public java.util.List<? extends MapCellOrBuilder>
        getMapCellOrBuilderList() {
      return mapCell_;
    }
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    public int getMapCellCount() {
      return mapCell_.size();
    }
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    public MapCell getMapCell(int index) {
      return mapCell_.get(index);
    }
    /**
     * <code>repeated .MapCell mapCell = 3;</code>
     */
    public MapCellOrBuilder getMapCellOrBuilder(
        int index) {
      return mapCell_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMapCellCount(); i++) {
        if (!getMapCell(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, height_);
      }
      for (int i = 0; i < mapCell_.size(); i++) {
        output.writeMessage(3, mapCell_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, height_);
      }
      for (int i = 0; i < mapCell_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, mapCell_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Map)) {
        return super.equals(obj);
      }
      Map other = (Map) obj;

      boolean result = true;
      result = result && (hasWidth() == other.hasWidth());
      if (hasWidth()) {
        result = result && (getWidth()
            == other.getWidth());
      }
      result = result && (hasHeight() == other.hasHeight());
      if (hasHeight()) {
        result = result && (getHeight()
            == other.getHeight());
      }
      result = result && getMapCellList()
          .equals(other.getMapCellList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
      }
      if (getMapCellCount() > 0) {
        hash = (37 * hash) + MAPCELL_FIELD_NUMBER;
        hash = (53 * hash) + getMapCellList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Map parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Map parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Map parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Map parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Map parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Map parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Map parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Map parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Map parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Map parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Map parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Map parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Map prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Map}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Map)
        MapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MapServiceOuterClass.internal_static_Map_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MapServiceOuterClass.internal_static_Map_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Map.class, Builder.class);
      }

      // Construct using MapServiceOuterClass.Map.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMapCellFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (mapCellBuilder_ == null) {
          mapCell_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          mapCellBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MapServiceOuterClass.internal_static_Map_descriptor;
      }

      public Map getDefaultInstanceForType() {
        return Map.getDefaultInstance();
      }

      public Map build() {
        Map result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Map buildPartial() {
        Map result = new Map(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        if (mapCellBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            mapCell_ = java.util.Collections.unmodifiableList(mapCell_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.mapCell_ = mapCell_;
        } else {
          result.mapCell_ = mapCellBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Map) {
          return mergeFrom((Map)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Map other) {
        if (other == Map.getDefaultInstance()) return this;
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (mapCellBuilder_ == null) {
          if (!other.mapCell_.isEmpty()) {
            if (mapCell_.isEmpty()) {
              mapCell_ = other.mapCell_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMapCellIsMutable();
              mapCell_.addAll(other.mapCell_);
            }
            onChanged();
          }
        } else {
          if (!other.mapCell_.isEmpty()) {
            if (mapCellBuilder_.isEmpty()) {
              mapCellBuilder_.dispose();
              mapCellBuilder_ = null;
              mapCell_ = other.mapCell_;
              bitField0_ = (bitField0_ & ~0x00000004);
              mapCellBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMapCellFieldBuilder() : null;
            } else {
              mapCellBuilder_.addAllMessages(other.mapCell_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWidth()) {
          return false;
        }
        if (!hasHeight()) {
          return false;
        }
        for (int i = 0; i < getMapCellCount(); i++) {
          if (!getMapCell(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Map parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Map) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int width_ ;
      /**
       * <code>required uint32 width = 1;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 width = 1;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required uint32 width = 1;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000001;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 width = 1;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>required uint32 height = 2;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 height = 2;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required uint32 height = 2;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000002;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 height = 2;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MapCell> mapCell_ =
        java.util.Collections.emptyList();
      private void ensureMapCellIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          mapCell_ = new java.util.ArrayList<MapCell>(mapCell_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MapCell, MapCell.Builder, MapCellOrBuilder> mapCellBuilder_;

      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public java.util.List<MapCell> getMapCellList() {
        if (mapCellBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mapCell_);
        } else {
          return mapCellBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public int getMapCellCount() {
        if (mapCellBuilder_ == null) {
          return mapCell_.size();
        } else {
          return mapCellBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public MapCell getMapCell(int index) {
        if (mapCellBuilder_ == null) {
          return mapCell_.get(index);
        } else {
          return mapCellBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder setMapCell(
          int index, MapCell value) {
        if (mapCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapCellIsMutable();
          mapCell_.set(index, value);
          onChanged();
        } else {
          mapCellBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder setMapCell(
          int index, MapCell.Builder builderForValue) {
        if (mapCellBuilder_ == null) {
          ensureMapCellIsMutable();
          mapCell_.set(index, builderForValue.build());
          onChanged();
        } else {
          mapCellBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder addMapCell(MapCell value) {
        if (mapCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapCellIsMutable();
          mapCell_.add(value);
          onChanged();
        } else {
          mapCellBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder addMapCell(
          int index, MapCell value) {
        if (mapCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapCellIsMutable();
          mapCell_.add(index, value);
          onChanged();
        } else {
          mapCellBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder addMapCell(
          MapCell.Builder builderForValue) {
        if (mapCellBuilder_ == null) {
          ensureMapCellIsMutable();
          mapCell_.add(builderForValue.build());
          onChanged();
        } else {
          mapCellBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder addMapCell(
          int index, MapCell.Builder builderForValue) {
        if (mapCellBuilder_ == null) {
          ensureMapCellIsMutable();
          mapCell_.add(index, builderForValue.build());
          onChanged();
        } else {
          mapCellBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder addAllMapCell(
          Iterable<? extends MapCell> values) {
        if (mapCellBuilder_ == null) {
          ensureMapCellIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mapCell_);
          onChanged();
        } else {
          mapCellBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder clearMapCell() {
        if (mapCellBuilder_ == null) {
          mapCell_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          mapCellBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public Builder removeMapCell(int index) {
        if (mapCellBuilder_ == null) {
          ensureMapCellIsMutable();
          mapCell_.remove(index);
          onChanged();
        } else {
          mapCellBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public MapCell.Builder getMapCellBuilder(
          int index) {
        return getMapCellFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public MapCellOrBuilder getMapCellOrBuilder(
          int index) {
        if (mapCellBuilder_ == null) {
          return mapCell_.get(index);  } else {
          return mapCellBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public java.util.List<? extends MapCellOrBuilder>
           getMapCellOrBuilderList() {
        if (mapCellBuilder_ != null) {
          return mapCellBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mapCell_);
        }
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public MapCell.Builder addMapCellBuilder() {
        return getMapCellFieldBuilder().addBuilder(
            MapCell.getDefaultInstance());
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public MapCell.Builder addMapCellBuilder(
          int index) {
        return getMapCellFieldBuilder().addBuilder(
            index, MapCell.getDefaultInstance());
      }
      /**
       * <code>repeated .MapCell mapCell = 3;</code>
       */
      public java.util.List<MapCell.Builder>
           getMapCellBuilderList() {
        return getMapCellFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MapCell, MapCell.Builder, MapCellOrBuilder>
          getMapCellFieldBuilder() {
        if (mapCellBuilder_ == null) {
          mapCellBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MapCell, MapCell.Builder, MapCellOrBuilder>(
                  mapCell_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          mapCell_ = null;
        }
        return mapCellBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Map)
    }

    // @@protoc_insertion_point(class_scope:Map)
    private static final Map DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Map();
    }

    public static Map getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<Map>
        PARSER = new com.google.protobuf.AbstractParser<Map>() {
      public Map parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Map(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Map> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Map> getParserForType() {
      return PARSER;
    }

    public Map getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  /**
   * Protobuf service {@code MapService}
   */
  public static abstract class MapService
      implements com.google.protobuf.Service {
    protected MapService() {}

    public interface Interface {
      /**
       * <code>rpc GetMap(.Empty) returns (.Map);</code>
       */
      public abstract void getMap(
              com.google.protobuf.RpcController controller,
              EmptyOuterClass.Empty request,
              com.google.protobuf.RpcCallback<Map> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new MapService() {
        @Override
        public  void getMap(
            com.google.protobuf.RpcController controller,
            EmptyOuterClass.Empty request,
            com.google.protobuf.RpcCallback<Map> done) {
          impl.getMap(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.getMap(controller, (EmptyOuterClass.Empty)request);
            default:
              throw new AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return EmptyOuterClass.Empty.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return Map.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc GetMap(.Empty) returns (.Map);</code>
     */
    public abstract void getMap(
        com.google.protobuf.RpcController controller,
        EmptyOuterClass.Empty request,
        com.google.protobuf.RpcCallback<Map> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return MapServiceOuterClass.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.getMap(controller, (EmptyOuterClass.Empty)request,
            com.google.protobuf.RpcUtil.<Map>specializeCallback(
              done));
          return;
        default:
          throw new AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return EmptyOuterClass.Empty.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return Map.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends MapService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void getMap(
          com.google.protobuf.RpcController controller,
          EmptyOuterClass.Empty request,
          com.google.protobuf.RpcCallback<Map> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          Map.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            Map.class,
            Map.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public Map getMap(
              com.google.protobuf.RpcController controller,
              EmptyOuterClass.Empty request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public Map getMap(
          com.google.protobuf.RpcController controller,
          EmptyOuterClass.Empty request)
          throws com.google.protobuf.ServiceException {
        return (Map) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          Map.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:MapService)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MapCell_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MapCell_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Map_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Map_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021map_service.proto\032\013empty.proto\"u\n\007MapC" +
      "ell\022\t\n\001x\030\001 \002(\r\022\t\n\001y\030\002 \002(\r\022&\n\005value\030\003 \001(\016" +
      "2\016.MapCell.Value:\007UNKNOWN\",\n\005Value\022\010\n\004FR" +
      "EE\020\000\022\014\n\010OBSTACLE\020\001\022\013\n\007UNKNOWN\020\002\"?\n\003Map\022\r" +
      "\n\005width\030\001 \002(\r\022\016\n\006height\030\002 \002(\r\022\031\n\007mapCell" +
      "\030\003 \003(\0132\010.MapCell2$\n\nMapService\022\026\n\006GetMap" +
      "\022\006.Empty\032\004.MapB\006\200\001\001\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          EmptyOuterClass.getDescriptor(),
        }, assigner);
    internal_static_MapCell_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MapCell_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MapCell_descriptor,
        new String[] { "X", "Y", "Value", });
    internal_static_Map_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Map_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Map_descriptor,
        new String[] { "Width", "Height", "MapCell", });
    EmptyOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
